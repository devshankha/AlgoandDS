Linked list:

1.Reverse a linkedlist
2.Convert a linkedlist in zig zag fashion
3.intersection point of two linked lists
4. reverse a doubly linked list
5. Delete a Node from linked list without head pointer


Tree:
1. Print left view of a binary tree
2. BFS and DFS
3. Check if a binary tree is a BST
4.print elements of a binary tree in level order
5. Iterative preorder traversal
6. Iterative inorder traversal
7. traverse a tree in spiral form
8. convert bst to dll.

Heap:
1.Huffman algorithm and tree
2. sort n number of sorted arrays
3.

Dynamic programming:
1. longest common subsequence
2. find numbers in an array that add to a sum

Backtracking:
1. Colouring a graph

Greedy algoritms:
activity sequencing problem
work scheduling program

Arrays:

find pairs in an array that add to a sum
the petrol problem
Remove duplicates from an unsorted array
count distinct elements in an array

Design a hit counter:

Puzzles:
25 horses, 5 tracks problem

String problems:
Find if characters in a string can form a palindrome
Fing element in a sparse string
Find the first non repeating character in the string
Find all permutations of a string


//Things to do as of now
revise ---design a parking lot, a chess game, amazon online system
string anagrams, revise Python//algorithm complexity, graph colouring problem
permutations using backtracking, design a rate delimiter, stak and queue problems, 
if binary tree is balanced







