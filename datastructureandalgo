Linked list:

1.Reverse a linkedlist
2.Convert a linkedlist in zig zag fashion
3.intersection point of two linked lists
4. reverse a doubly linked list
5. Delete a Node from linked list without head pointer


Matrix:
Rotate a matrix


Tree:
1. Print left view of a binary tree
2. BFS and DFS
3. Check if a binary tree is a BST
4.print elements of a binary tree in level order
5. Iterative preorder traversal
6. Iterative inorder traversal
7. traverse a tree in spiral form
8. convert bst to dll.
9. Find if 2 binary trees are isomorphic

Heap:
1.Huffman algorithm and tree
2. sort n number of sorted arrays
3.

Dynamic programming:
1. longest common subsequence
2. find numbers in an array that add to a sum
3. Find nth Catalan number
4. Find nth ugly number
5. Find number of BST with n distinct keys
6.Count ways to reach the nth stair using step 1, 2 or 3

Backtracking:
1. Colouring a graph

Greedy algoritms:
activity sequencing problem
work scheduling program

Arrays:

find pairs in an array that add to a sum
the petrol problem
Remove duplicates from an unsorted array
count distinct elements in an array
find missing number in contiguous array (using xor)
For a given array of repeated elements, exactly one element is not repeated. You need to return the non-repeated element.
[1, 2, 5, 4, 6, 8, 9, 2, 1, 4, 5, 8, 9]

sort an array of 0s,1s and 2s
Rearrange positive and negative numbers with constant extra space

Design a hit counter:

Puzzles:
25 horses, 5 tracks problem

String problems:
Find if characters in a string can form a palindrome
Fing element in a sparse string
Find the first non repeating character in the string
Find all permutations of a string
Check whether 2 strings are anagrams of each other
Find if all unique characters are there in string without additional structure , excellent use of bitwise operators


//Things to do as of now
revise ---design a parking lot, a chess game, amazon online system
string anagrams, revise Python//algorithm complexity, graph colouring problem
permutations using backtracking, design a rate delimiter, stak and queue problems, 
if binary tree is balanced
elastic search, kibana, Grafana,trie datastructure, duplicates in URL
// sort +ve and -ve numbers in an array


To remember:

Remember this logic--

// Both roots are NULL, trees isomorphic by definition 
 if (n1 == null && n2 == null) 
    return true; 
   
 // Exactly one of the n1 and n2 is NULL, trees not isomorphic 
 if (n1 == null || n2 == null) 
     return false; 







